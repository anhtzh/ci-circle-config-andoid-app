# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2 # version 1 is no longer supported
jobs:
  build:
    docker:
      #- image: circleci/openjdk:8-jdk
      # circleci/android is based on circleci/openjdk:8-jdk with Android SDK
      # -alpha tag is a must currently for circleci setting
      - image: circleci/android:api-26-alpha
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/code
    #working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    # filters:      
    #   branches:
    #     only:
    #       - master
    #       - feature/new_dashboard
    #       - /dev/.*/
    #   tags:
    #     only: /^v.*/

    branches:
      only:
        - master
        - feature/new_dashboard
        - /dev/.*/

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run: 
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}  
        
      - run: 
          name: Run Tests
          command: ./gradlew test
      
      - run:
          name: Build debug
          command: ./gradlew assembleDebug
          when: on_success #always, on_success, on_fail (default: on_success)

      - run:
          name: Build release
          command: ./gradlew assembleRelease
          when: on_success
                   
      - store_artifacts:
          path: app/build/reports
          destination: reports       

      - store_test_results:   
          path: app/build/test-results

      - run: |
          cp /app/build/outputs/* app/build/reports

      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
#eof
