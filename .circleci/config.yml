# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2 # version 1 is no longer supported

jobs:
  circleci_test_job:
    docker:
      - image: circleci/android:api-27-alpha

    working_directory: ~/code

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: "-Xms512m -Xmx3072m"
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Run Tests
          command: ./gradlew clean testDebugUnitTest

      - store_artifacts:
          path: app/build/reports
          destination: test-reports

      #https://circleci.com/docs/2.0/configuration-reference/#store_test_results
      - store_test_results:
          path: app/build/reports/tests
          destination: prefix

  circleci_test_coverage_job:
      docker:
        - image: circleci/android:api-27-alpha

      working_directory: ~/code

      environment:
        # Customize the JVM maximum heap limit
        JVM_OPTS: "-Xms512m -Xmx3072m"
        TERM: dumb

      steps:
        - checkout

        # Download and cache dependencies
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

        - run:
            name: Download Dependencies
            command: ./gradlew androidDependencies

        - save_cache:
            paths:
              - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

        - run:
            name: Generate Code Coverage
            #command: ./gradlew clean jacocoTestReport
            command: ./gradlew clean testDebugUnitTest

        - store_artifacts:
            path: app/build/reports
            destination: test-reports

        #https://circleci.com/docs/2.0/configuration-reference/#store_test_results
        - store_test_results:
            path: app/build/reports/tests
            destination: prefix

  circleci_build_job:
    docker:
      - image: circleci/android:api-27-alpha

    working_directory: ~/code

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: "-Xms512m -Xmx3072m"
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
      TERM: dumb

    steps:
      - checkout

      # No cache in build job because of multidex timeout error

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - run:
          name: Build debug
          command: ./gradlew assembleDebug
          no_output_timeout: 20m

      - run: |
          sudo apt-get install tree
          tree app/build/outputs

      - store_artifacts:
          path: app/build/outputs
          destination: outputs

workflows:
  version: 2

  # for pull request
  wfl_test_only:
    jobs:
      - circleci_test_job:
          filters:
            tags:
              ignore: /.*/
            branches:
              only:
                # all branches begin with `feature/` except branch `feature/new_dashboard`
                - /feature/(?!(new_dashboard|skipci)).*/
                # all branches begin with `fix/`
                - /fix/.*/

  # for feature/new_dashboard has new code
  wfl_test_then_build:
      jobs:
        - circleci_test_coverage_job:
            filters:
              tags:
                only: /^v.*/
              branches:
                only:
                  - master
                  - feature/new_dashboard
        - circleci_build_job:
            requires:
               - circleci_test_coverage_job
            filters:
              tags:
                only: /^v.*/
              branches:
                only:
                  - master
                  - feature/new_dashboard

#eof
